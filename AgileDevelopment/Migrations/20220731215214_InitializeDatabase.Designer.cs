// <auto-generated />
using AgileDevelopment.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace AgileDevelopment.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20220731215214_InitializeDatabase")]
    partial class InitializeDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("AgileDevelopment.Models.Member", b =>
                {
                    b.Property<int>("MemberID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MemberID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MemberID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("AgileDevelopment.Models.MethodFramework", b =>
                {
                    b.Property<int>("MethodFrameworkID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MethodFrameworkID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MethodFrameworkID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("MethodFrameworks");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Methodology", b =>
                {
                    b.Property<int>("MethodologyID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MethodologyID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MethodologyID");

                    b.ToTable("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.MindSet", b =>
                {
                    b.Property<int>("MindSetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("MindSetID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MemberID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("MindSetID");

                    b.HasIndex("MemberID");

                    b.ToTable("MindSet");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Practice", b =>
                {
                    b.Property<int>("PracticeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PracticeID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PracticeID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("Practice");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Principle", b =>
                {
                    b.Property<int>("PrincipleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("PrincipleID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("PrincipleID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("Principle");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Test", b =>
                {
                    b.Property<int>("TestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("TestID"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("TestID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("Test");
                });

            modelBuilder.Entity("AgileDevelopment.Models.WiseSaying", b =>
                {
                    b.Property<int>("WiseSayingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("WiseSayingID"));

                    b.Property<int>("MethodologyID")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("WiseSayingID");

                    b.HasIndex("MethodologyID");

                    b.ToTable("WiseSaying");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Member", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", "Methodology")
                        .WithMany("Members")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.MethodFramework", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", "Methodology")
                        .WithMany("MethodFrameworks")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.MindSet", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Member", "Member")
                        .WithMany("MindSets")
                        .HasForeignKey("MemberID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Practice", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", "Methodology")
                        .WithMany("Practices")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Principle", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", null)
                        .WithMany("Principles")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AgileDevelopment.Models.Test", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", "Methodology")
                        .WithMany("Tests")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.WiseSaying", b =>
                {
                    b.HasOne("AgileDevelopment.Models.Methodology", "Methodology")
                        .WithMany("WiseSayings")
                        .HasForeignKey("MethodologyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Methodology");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Member", b =>
                {
                    b.Navigation("MindSets");
                });

            modelBuilder.Entity("AgileDevelopment.Models.Methodology", b =>
                {
                    b.Navigation("Members");

                    b.Navigation("MethodFrameworks");

                    b.Navigation("Practices");

                    b.Navigation("Principles");

                    b.Navigation("Tests");

                    b.Navigation("WiseSayings");
                });
#pragma warning restore 612, 618
        }
    }
}
